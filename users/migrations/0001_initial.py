# Generated by Django 5.2.1 on 2025-06-14 06:09

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('labels', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='customer_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('shipping_address', models.TextField(blank=True, help_text='Default shipping address', null=True)),
                ('billing_address', models.TextField(blank=True, help_text='Default billing address', null=True)),
                ('preferred_currency', models.CharField(blank=True, default='EUR', help_text='Preferred currency for pricing', max_length=3)),
                ('marketing_preferences', models.JSONField(blank=True, default=dict, help_text='Marketing communication preferences', null=True)),
                ('wedding_day', models.DateField(help_text='The planned wedding day (must be in the future).')),
                ('role', models.CharField(choices=[('STANDARD', 'Standard'), ('PREMIUM', 'Premium'), ('VIP', 'VIP'), ('ENTERPRISE', 'Enterprise')], default='STANDARD', help_text='Customer role - determines access levels and features', max_length=20)),
                ('labels', models.ManyToManyField(blank=True, help_text='Optional labels to categorize this customer', related_name='customers', to='labels.label')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='professional_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('specialization', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False, help_text='If True, this professional will be used as the default for new orders')),
                ('profile_image', models.ImageField(blank=True, help_text='Professional profile photo', null=True, upload_to='professional_profiles/')),
                ('contact_hours', models.CharField(blank=True, help_text='Hours when the professional is available for contact', max_length=200, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average rating from customers (1.00-5.00)', max_digits=3, null=True)),
                ('labels', models.ManyToManyField(blank=True, help_text='Optional labels to categorize this professional', related_name='professionals', to='labels.label')),
            ],
            options={
                'verbose_name': 'Professional',
                'verbose_name_plural': 'Professionals',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalCustomerLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('relationship_start_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('REQUESTED', 'Requested')], default='ACTIVE', max_length=10)),
                ('notes', models.TextField(blank=True, help_text='Notes about this professional-customer relationship', null=True)),
                ('last_interaction_date', models.DateTimeField(blank=True, help_text='Date of the last interaction between professional and customer', null=True)),
                ('preferred_communication', models.CharField(choices=[('EMAIL', 'Email'), ('PHONE', 'Phone'), ('SMS', 'SMS'), ('APP', 'In-App'), ('ANY', 'Any Method')], default='EMAIL', help_text='Preferred method of communication', max_length=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_links', to='users.customer')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_links', to='users.professional')),
            ],
            options={
                'verbose_name': 'Professional-Customer Link',
                'verbose_name_plural': 'Professional-Customer Links',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['company_name'], name='users_custo_company_a60cec_idx'),
        ),
        migrations.AddIndex(
            model_name='professional',
            index=models.Index(fields=['rating'], name='users_profe_rating_565c6e_idx'),
        ),
        migrations.AddIndex(
            model_name='professionalcustomerlink',
            index=models.Index(fields=['status'], name='users_profe_status_8d03ba_idx'),
        ),
        migrations.AddIndex(
            model_name='professionalcustomerlink',
            index=models.Index(fields=['relationship_start_date'], name='users_profe_relatio_c7f17d_idx'),
        ),
        migrations.AddIndex(
            model_name='professionalcustomerlink',
            index=models.Index(fields=['last_interaction_date'], name='users_profe_last_in_9136a8_idx'),
        ),
        migrations.AddConstraint(
            model_name='professionalcustomerlink',
            constraint=models.UniqueConstraint(fields=('professional', 'customer'), name='unique_professional_customer_link'),
        ),
    ]
